{"version":3,"sources":["App.js","index.js"],"names":["placehold","App","props","state","view","event","this","setState","target","value","className","id","onChange","handleChange","bind","dangerouslySetInnerHTML","__html","window","marked","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sMAIMA,EAAS,8qCA8EAC,E,kDA7BX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,KAAMJ,GAHI,E,yDAOLK,GACTC,KAAKC,SAAS,CACVH,KAAMC,EAAMG,OAAOC,U,+BAMvB,OACI,yBAAKC,UAAU,QACX,yBAAKA,UAAU,QACX,wBAAIA,UAAU,OAAd,UACA,8BAAUC,GAAG,SAASC,SAAUN,KAAKO,aAAaC,KAAKR,OAAQN,IAEnE,yBAAKU,UAAU,QACX,wBAAIA,UAAU,OAAd,aACA,yBAAKC,GAAG,UAAUI,wBAAyB,CAACC,OAAQC,OAAOC,OAAOZ,KAAKH,MAAMC,e,GAxB/Ee,IAAMC,WC/CxBC,IAASC,OACP,6BACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.8a61e887.chunk.js","sourcesContent":["//app --> preview and editor row in computer and column in mobile \r\nimport React from \"react\"\r\n\r\n//use window.marked to convert text\r\nconst placehold = `# Welcome to my React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n  \r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n  \r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.com), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | ------------- \r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbererd lists too.\r\n1. Use just 1s if you want! \r\n1. But the list goes on...\r\n- Even if you use dashes or asterisks.\r\n* And last but not least, let's not forget embedded images:\r\n\r\n![React Logo w/ Text](https://goo.gl/Umyytc)\r\n`\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            view: placehold\r\n        }\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({\r\n            view: event.target.value\r\n        })\r\n    }\r\n\r\n    render(){   \r\n\r\n        return (\r\n            <div className=\"full\">\r\n                <div className=\"edit\">\r\n                    <h1 className=\"edi\">Editor</h1>\r\n                    <textarea id=\"editor\" onChange={this.handleChange.bind(this)}>{placehold}</textarea>\r\n                </div>\r\n                <div className=\"prev\">\r\n                    <h1 className=\"pre\">Previewer</h1>\r\n                    <div id='preview' dangerouslySetInnerHTML={{__html: window.marked(this.state.view)}} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from \"./App\"\r\n\r\n\r\nReactDOM.render(\r\n  <div>\r\n    <App />\r\n  </div>,\r\n  document.getElementById('root'))\r\n"],"sourceRoot":""}